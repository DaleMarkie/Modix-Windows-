// scripts/generateImportMap.js
const fs = require("fs");
const path = require("path");

const MODULE_ROOT = path.join(__dirname, "../module_system");
const OUTPUT_PATH = path.join(__dirname, "../src/app/moduleImportMap.js");

// Scan module_system for Core/Optional modules
function findFrontendEntries(dir) {
  let entries = {};
  function scan(current, relPath) {
    const files = fs.readdirSync(current, { withFileTypes: true });
    for (const file of files) {
      if (file.isDirectory()) {
        if (file.name === "!REWORK") continue; // Skip !REWORK directories
        scan(path.join(current, file.name), path.join(relPath, file.name));
      } else if (file.name === "page.js" || file.name === "page.tsx") {
        const entryKey = path.join(relPath, file.name).replace(/\\/g, "/");
        const importPath = `../../module_system/${entryKey}`;
        entries[entryKey] = importPath;
      }
    }
  }
  scan(dir, "");
  return entries;
}

const entries = findFrontendEntries(MODULE_ROOT);

// Explicitly add Workshop from src/app/Workshop
entries["Workshop/frontend/page.tsx"] = "./Workshop/page";

const importMapCode = `// Auto-generated by scripts/generateImportMap.js
export const importMap = {
${Object.entries(entries)
  .map(([key, val]) => `  "${key}": () => import("${val}"),`)
  .join("\n")}
};
`;

fs.writeFileSync(OUTPUT_PATH, importMapCode);
console.log(
  `Import map generated with ${Object.keys(entries).length} entries.`
);
