// Scans module_system for available module frontends and generates an import map
// Run: node scripts/generateImportMap.js

const fs = require('fs');
const path = require('path');

const MODULE_ROOT = path.join(__dirname, '../module_system');
const OUTPUT_PATH = path.join(__dirname, '../src/app/moduleImportMap.js');

function findFrontendEntries(dir) {
  let entries = {};
  function scan(current, relPath) {
    const files = fs.readdirSync(current, { withFileTypes: true });
    for (const file of files) {
      if (file.isDirectory()) {
        scan(path.join(current, file.name), path.join(relPath, file.name));
      } else if (file.name === 'page.js' || file.name === 'page.tsx') {
        // e.g. Core/Terminal/frontend/page.js
        const entryKey = path.join(relPath, file.name).replace(/\\/g, '/');
        const importPath = `../../module_system/${entryKey}`;
        entries[entryKey] = importPath;
      }
    }
  }
  scan(dir, '');
  return entries;
}

const entries = findFrontendEntries(MODULE_ROOT);

const importMapCode = `// Auto-generated by scripts/generateImportMap.js\nexport const importMap = {\n${Object.entries(entries)
  .map(([key, val]) => `  "${key}": () => import("${val}"),`)
  .join('\n')}\n};\n`;

fs.writeFileSync(OUTPUT_PATH, importMapCode);
console.log(`Import map generated with ${Object.keys(entries).length} entries.`);
